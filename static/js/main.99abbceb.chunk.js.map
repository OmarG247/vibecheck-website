{"version":3,"sources":["img/play_color.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","Grid","stackable","style","height","padding","backgroundColor","Row","verticalAlign","stretched","Column","textAlign","width","Image","className","centered","right","src","logo","Container","fontFamily","color","textDecoration","textDecorationColor","fontWeight","bottom","fontSize","href","Button","floated","borderRadius","marginTop","float","id","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99abbceb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play_color.4334fea9.svg\";","import React from \"react\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Grid, Image, Container, Button } from \"semantic-ui-react\";\nimport logo from \"./img/play_color.svg\";\n\nconst App = () => {\n  return (\n    <Grid\n      stackable\n      style={{ height: \"100vh\", padding: \"2rem\", backgroundColor: \"#FFC300\" }}\n    >\n      <Grid.Row verticalAlign=\"middle\" stretched style={{ height: \"100vh\" }}>\n        <Grid.Column textAlign=\"right\" width={6}>\n          <Image\n            className=\"main-logo\"\n            centered\n            style={{ right: 0 }}\n            src={logo}\n          />\n        </Grid.Column>\n        <Grid.Column stretched width={10}>\n          <Container textAlign=\"left\">\n            <h1\n              className=\"title\"\n              style={{\n                fontFamily: \"Sail\",\n                color: \"black\",\n                textDecoration: \"underline\",\n                textDecorationColor: \"white\"\n              }}\n            >\n              What's the story?\n            </h1>\n            <h2\n              className=\"subtitle\"\n              style={{\n                fontFamily: \"Work Sans\",\n                fontWeight: 300,\n                color: \"black\"\n              }}\n            >\n              Coming March 2020\n            </h2>\n            <div style={{ bottom: 0 }}>\n              <p\n                style={{\n                  fontFamily: \"Work Sans\",\n                  fontWeight: 400,\n                  fontSize: \"1.2rem\",\n                  color: \"black\"\n                }}\n              >\n                A project developed by:{\" \"}\n                <a\n                  className=\"profile\"\n                  href=\"http://jacobdanovitch.me\"\n                  style={{ color: \"#5187F0\" }}\n                >\n                  <b>Jacob Danovitch</b>\n                </a>\n                {\", \"}\n                <a\n                  className=\"profile\"\n                  href=\"https://github.com/faris\"\n                  style={{ color: \"black\" }}\n                >\n                  <b>Faris Mohamed</b>\n                </a>\n                {\", \"}\n                <a\n                  className=\"profile\"\n                  href=\"https://omarflores.dev\"\n                  style={{ color: \"#8600B6\" }}\n                >\n                  <b>Omar Garcia Flores</b>\n                </a>\n                {\" & \"}\n                <a\n                  className=\"profile\"\n                  href=\"https://github.com/nathanembaye\"\n                  style={{ color: \"#FF351A\" }}\n                >\n                  <b>Nathan Embaye</b>\n                </a>\n              </p>\n              <Button\n                className=\"action-button\"\n                floated=\"right\"\n                style={{\n                  width: \"18rem\",\n                  backgroundColor: \"white\",\n                  color: \"black\",\n                  fontFamily: \"Work Sans\",\n                  fontWeight: 300,\n                  borderRadius: 0,\n                }}\n                href=\"/vibecheck_beta_1.0.1.apk\"\n              >\n                Try out the beta\n              </Button>\n              <Button\n                className=\"action-button\"\n                floated=\"right\"\n                style={{\n                  width: \"18rem\",\n                  backgroundColor: \"black\",\n                  color: \"white\",\n                  fontFamily: \"Work Sans\",\n                  fontWeight: 300,\n                  borderRadius: 0,\n                }}\n                href=\"#about\"\n              >\n                Learn more ->\n              </Button>\n              <p\n                className=\"legend\"\n                style={{\n                  marginTop: '0.1rem',\n                  float: 'right',\n                  fontFamily: \"Work Sans\",\n                  fontWeight: 400,\n                  color: \"black\",\n                }}\n              >\n                By downloading this application you agree to the fair use of the infomation collected.\n              </p>\n            </div>\n          </Container>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row\n        verticalAlign=\"middle\"\n        stretched\n        style={{ height: \"100vh\" }}\n        id=\"about\"\n      >\n        <Grid.Column stretched>\n          <Container textAlign=\"left\">\n            <h1\n              className=\"title\"\n              style={{\n                fontFamily: \"Sail\",\n                color: \"black\",\n                textDecoration: \"underline\",\n                textDecorationColor: \"white\"\n              }}\n            >\n              What's vibecheck?\n            </h1>\n            <div style={{ bottom: 0 }}>\n              <p\n                style={{\n                  fontFamily: \"Work Sans\",\n                  fontWeight: 400,\n                  fontSize: \"2rem\",\n                  color: \"black\"\n                }}\n                className=\"about\"\n              >\n                Much of the music we listen to is curated on listening behaviour\n                of other users, rather than the meaning of the music itself.\n                Vibecheck is an application that{\" \"}\n                <b style={{ color: \"#000000\" }}>\n                  recommends music based on your moods and emotions.\n                </b>\n              </p>\n              <p\n                style={{\n                  fontFamily: \"Work Sans\",\n                  fontWeight: 400,\n                  fontSize: \"2rem\",\n                  color: \"black\"\n                }}\n                className=\"about\"\n              >\n                Our goal is to make you able to {\" \"}\n                <b style={{ color: \"#FF351A\" }}>\n                  find music that matches your context\n                </b>\n                {\", \"}\n                <b style={{ color: \"#8600B6\" }}>\n                  personality\n                </b>{\", \"}\n                and {\" \"}\n                <b style={{ color: \"#5187F0\" }}>\n                music that you can relate\n                to. \n                </b>\n              </p>\n              <Button\n                className=\"action-button\"\n                floated=\"right\"\n                style={{\n                  width: \"18rem\",\n                  backgroundColor: \"black\",\n                  color: \"white\",\n                  fontFamily: \"Work Sans\",\n                  fontWeight: 300,\n                  borderRadius: 0,\n                }}\n                href=\"/vibecheck_component_diagram.pdf\"\n              >\n                Our architecture\n              </Button>\n              <Button\n                className=\"action-button\"\n                floated=\"right\"\n                style={{\n                  width: \"18rem\",\n                  backgroundColor: \"black\",\n                  color: \"white\",\n                  fontFamily: \"Work Sans\",\n                  fontWeight: 300,\n                  borderRadius: 0,\n                }}\n                href=\"/vibecheck_brand_guide.pdf\"\n              >\n                Our brand guide\n              </Button>\n            </div>\n          </Container>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}